---
import NavBar from '../components/NavBar.astro';
import Footer from '../components/Footer.astro';
/* interface Props {
title: string;
} */

// const { title } = Astro.props;
---

<!doctype html>

<html lang="en">

<head>
	<title>Oussama Bernou Portfolio</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<meta name="description" content="Oussama Bernou's portfolio and personal Blog" />
	<script src="https://cdn.jsdelivr.net/npm/uikit@3.19.2/dist/js/uikit.min.js" defer></script>
	<!-- <script src="https://cdn.jsdelivr.net/npm/uikit@3.19.2/dist/js/uikit-icons.min.js"></script> -->
	<link rel="preload" href="/fonts/geist-font/fonts/GeistVariableVF.woff2" as="font" type="font/woff2" crossorigin />
	<link rel="preload" href="/fonts/geist-font/fonts/GeistMonoVariableVF.woff2" as="font" type="font/woff2"
		crossorigin />
	<link rel="stylesheet" href="/fonts/geist-font/style.css" />
	<link rel="icon" href="/images/favicon.png">
	<script is:inline>
		if (
			localStorage.getItem("color-theme") === "dark" ||
			(!("color-theme" in localStorage) &&
				window.matchMedia("(prefers-color-scheme: dark)").matches)
		) {
			document.documentElement.classList.add("dark");
		} else {
			document.documentElement.classList.remove("dark");
		}
	</script>
</head>

<body class="bg-background font-geist-sans text-foreground antialiased pt-0 overflow-x-hidden">

	<div class="flex min-h-screen flex-col pt-0">
		<div class="flex-1 pt-0">
			<NavBar />
			<slot></slot>
		</div>

		<div class="flex-none border-t-muted border-t">
			<Footer />
		</div>

	</div>

	<script is:inline>
		// Theme toggle functionality
		var themeToggleBtn = document.getElementById("theme-toggle");

		themeToggleBtn.addEventListener("click", function () {
			// if set via local storage previously
			if (localStorage.getItem("color-theme")) {
				if (localStorage.getItem("color-theme") === "light") {
					document.documentElement.classList.add("dark");
					localStorage.setItem("color-theme", "dark");
				} else {
					document.documentElement.classList.remove("dark");
					localStorage.setItem("color-theme", "light");
				}

				// if NOT set via local storage previously
			} else {
				if (document.documentElement.classList.contains("dark")) {
					document.documentElement.classList.remove("dark");
					localStorage.setItem("color-theme", "light");
				} else {
					document.documentElement.classList.add("dark");
					localStorage.setItem("color-theme", "dark");
				}
			}
		});

		// Tech badge animation functionality (runs once per page)
		(() => {
			if (typeof window === 'undefined') return;
			const w = window;
			
			// Initialize immediately for badges already on the page
			const initTechBadges = () => {
				if (!('IntersectionObserver' in w)) {
					document.querySelectorAll('.tech-badge[data-animate]')
						.forEach((el) => el.classList.add('is-visible'));
					return;
				}

				if (!w.__techBadgeIO) {
					w.__techBadgeIO = new IntersectionObserver((entries) => {
						for (const entry of entries) {
							if (entry.isIntersecting) {
								const el = entry.target;
								const delay = el.getAttribute('data-delay') || Math.floor(Math.random() * 220);
								el.style.setProperty('--reveal-delay', `${delay}ms`);
								el.classList.add('is-visible');
								w.__techBadgeIO.unobserve(el);
							}
						}
					}, { threshold: 0.15, rootMargin: '0px 0px -10% 0px' });
				}

				document.querySelectorAll('.tech-badge[data-animate]')
					.forEach((el) => w.__techBadgeIO.observe(el));
			};

			// Initialize on DOMContentLoaded
			if (document.readyState === 'loading') {
				document.addEventListener('DOMContentLoaded', initTechBadges);
			} else {
				initTechBadges();
			}
		})();
	</script>
</body>

</html>
